sd(c(5,8,12))
which.min(c(4,1,6))
Sys.setlocale("LC_ALL", "C")
dsqk
dkslqdlsq
8*6
2^16
2^
4
8*6
2^16
2^
8*6
8*10
sqrt(2)
abs(-ยง())
abs(-65)
?sqrt
SquareRoot2 = sqrt(2)
SquareRoot2
HoursYear <- 365*24
HoursYear
ls()
c(2,3,5,6,13)
Country = c("Brazil", "China", "India", "Switzerland", "USA")
LifeExpectancy = c(74,76,65,83,79)
Country
LifeExpectancy
Country[1]
LifeExpectancy[3]
seq(0,100,2)
CountryData = data.frame(Country,LifeExpectancy)
CountryData
CountryData$Population = c(199000,1390000,1240000,7997,318000)
CountryData
Country = c("Australia", "Greece")
LifeExpectancy = c(82,81)
Population = c(23050,11125)
NewCountryData = data.frame(Country, LifeExpectancy, Population)
NewCountryData
AllCountryData = rbind(CountryData, NewCountryData)
AllCountryData
mvt = read.csv("mvtWeek1.csv")
# 1.1#
CPS = read.csv("CPSData.csv")#
str(CPS)#
#
# 1.2 - 1.4 - 2.1#
summary(CPS)#
#
# 1.3#
sort(table(CPS$State))#
#
# 1.5#
table(CPS$Race, CPS$Hispanic)#
#
# 2.2#
table(CPS$Region, is.na(CPS$Married))#
table(CPS$Age, is.na(CPS$Married))#
table(CPS$Sex, is.na(CPS$Married))#
table(CPS$Citizenship, is.na(CPS$Married))#
#
# 2.3#
table(CPS$State, is.na(CPS$MetroAreaCode))#
#
# 2.4#
table(CPS$Region, is.na(CPS$MetroAreaCode))#
#
# 2.5#
sort(tapply(is.na(CPS$MetroAreaCode), CPS$State, mean))
MetroAreaMap = read.csv("MetroAreaCodes.csv")#
CountryMap = read.csv("CountryCodes.csv")
str(MetroAreaMap)#
str(CountryMap)
CPS = merge(CPS, MetroAreaMap, by.x="MetroAreaCode", by.y="Code", all.x=TRUE)
summary(CPS)
sort(table(CPS$MetroArea))
sort(tapply(CPS$Hispanic, CPS$MetroArea, mean))
sort(tapply(CPS$Race == "Asian", CPS$MetroArea, mean))
sort(tapply(CPS$Education == "No high school diploma", CPS$MetroArea, mean, na.rm = TRUE))
CPS = merge(CPS, CountryMap, by.x="CountryOfBirthCode", by.y="Code", all.x=TRUE)#
summary(CPS)
sort(table(CPS$Country))
sort(table(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", CPS$Country, na.rm = TRUE))
sort(table(CPS$MetroArea, CPS$Country, na.rm = TRUE))
NewYork = subset(CPS, CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", na.rm = TRUE)
summary(NewYork)
mean(NewYork$Country != "United States", na.rm = TRUE)
sort(tapply(CPS$Country == "India", CPS$MetroArea, na.rm = TRUE))
sort(tapply(CPS$MetroArea, CPS$Country == "India", na.rm = TRUE))
sort(tapply(CPS$Country == "India", CPS$MetroArea, sum, na.rm = TRUE))
sort(tapply(CPS$Country == "Brazil", CPS$MetroArea, sum, na.rm = TRUE))#
sort(tapply(CPS$Country == "Somalia", CPS$MetroArea, sum, na.rm = TRUE))
# 1.1#
CPS = read.csv("CPSData.csv")#
str(CPS)#
#
# 1.2 - 1.4 - 2.1#
summary(CPS)#
#
# 1.3#
sort(table(CPS$State))#
#
# 1.5#
table(CPS$Race, CPS$Hispanic)#
#
# 2.2#
table(CPS$Region, is.na(CPS$Married))#
table(CPS$Age, is.na(CPS$Married))#
table(CPS$Sex, is.na(CPS$Married))#
table(CPS$Citizenship, is.na(CPS$Married))#
#
# 2.3#
table(CPS$State, is.na(CPS$MetroAreaCode))#
#
# 2.4#
table(CPS$Region, is.na(CPS$MetroAreaCode))#
#
# 2.5#
sort(tapply(is.na(CPS$MetroAreaCode), CPS$State, mean))#
#
# 3.1#
MetroAreaMap = read.csv("MetroAreaCodes.csv")#
CountryMap = read.csv("CountryCodes.csv")#
str(MetroAreaMap)#
str(CountryMap)#
#
# 3.2#
CPS = merge(CPS, MetroAreaMap, by.x="MetroAreaCode", by.y="Code", all.x=TRUE)#
summary(CPS)#
#
# 3.3#
sort(table(CPS$MetroArea))#
#
# 3.4#
sort(tapply(CPS$Hispanic, CPS$MetroArea, mean))#
#
# 3.5#
sort(tapply(CPS$Race == "Asian", CPS$MetroArea, mean))#
#
# 3.6#
sort(tapply(CPS$Education == "No high school diploma", CPS$MetroArea, mean, na.rm = TRUE))#
#
# 4.1#
CPS = merge(CPS, CountryMap, by.x="CountryOfBirthCode", by.y="Code", all.x=TRUE)#
summary(CPS)#
#
# 4.2#
sort(table(CPS$Country))#
#
# 4.3#
NewYork = subset(CPS, CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", na.rm = TRUE)#
mean(NewYork$Country != "United States", na.rm = TRUE)#
#
# 4.4#
sort(tapply(CPS$Country == "India", CPS$MetroArea, sum, na.rm = TRUE))#
sort(tapply(CPS$Country == "Brazil", CPS$MetroArea, sum, na.rm = TRUE))#
sort(tapply(CPS$Country == "Somalia", CPS$MetroArea, sum, na.rm = TRUE))
# 1.1#
CPS = read.csv("CPSData.csv")#
str(CPS)#
#
# 1.2 - 1.4 - 2.1#
summary(CPS)#
#
# 1.3#
sort(table(CPS$State))#
#
# 1.5#
table(CPS$Race, CPS$Hispanic)#
#
# 2.2#
table(CPS$Region, is.na(CPS$Married))#
table(CPS$Age, is.na(CPS$Married))#
table(CPS$Sex, is.na(CPS$Married))#
table(CPS$Citizenship, is.na(CPS$Married))#
#
# 2.3#
table(CPS$State, is.na(CPS$MetroAreaCode))#
#
# 2.4#
table(CPS$Region, is.na(CPS$MetroAreaCode))#
#
# 2.5#
sort(tapply(is.na(CPS$MetroAreaCode), CPS$State, mean))#
#
# 3.1#
MetroAreaMap = read.csv("MetroAreaCodes.csv")#
CountryMap = read.csv("CountryCodes.csv")#
str(MetroAreaMap)#
str(CountryMap)#
#
# 3.2#
CPS = merge(CPS, MetroAreaMap, by.x="MetroAreaCode", by.y="Code", all.x=TRUE)#
summary(CPS)#
#
# 3.3#
sort(table(CPS$MetroArea))#
#
# 3.4#
sort(tapply(CPS$Hispanic, CPS$MetroArea, mean))#
#
# 3.5#
sort(tapply(CPS$Race == "Asian", CPS$MetroArea, mean))#
#
# 3.6#
sort(tapply(CPS$Education == "No high school diploma", CPS$MetroArea, mean, na.rm = TRUE))#
#
# 4.1#
CPS = merge(CPS, CountryMap, by.x="CountryOfBirthCode", by.y="Code", all.x=TRUE)#
summary(CPS)#
#
# 4.2#
sort(table(CPS$Country))#
#
# 4.3#
NewYork = subset(CPS, CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", na.rm = TRUE)#
mean(NewYork$Country != "United States", na.rm = TRUE)#
#
# 4.4#
sort(tapply(CPS$Country == "India", CPS$MetroArea, sum, na.rm = TRUE))#
sort(tapply(CPS$Country == "Brazil", CPS$MetroArea, sum, na.rm = TRUE))#
sort(tapply(CPS$Country == "Somalia", CPS$MetroArea, sum, na.rm = TRUE))
